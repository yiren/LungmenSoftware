@model LungmenSoftware.Models.NUMACFirmware.EPROM

@{
    ViewBag.Title = "CreateEPROM";
}

<h2>CreateEPROM</h2>


@using (Html.BeginForm(FormMethod.Post)) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>EPROM</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.SocketLocation, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SocketLocation, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SocketLocation, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EPROMAssembly, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EPROMAssembly, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EPROMAssembly, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EPROMAssemblyRev, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EPROMAssemblyRev, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EPROMAssemblyRev, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PartsListRev, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PartsListRev, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PartsListRev, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EPROMProgram, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EPROMProgram, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EPROMProgram, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EPROMProgramRev, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EPROMProgramRev, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EPROMProgramRev, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EPROMSerialNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EPROMSerialNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EPROMSerialNumber, "", new { @class = "text-danger" })
            </div>
        </div>
         <div class="form-group">
            <label class="control-label col-md-2">對應的ChassisBoard</label>
            <div class="col-md-10">
                @Html.DropDownList("ChassisBoard", (IEnumerable<SelectListItem>)ViewBag.ChassisBoards, new { @class = "form-control"})
                @Html.ValidationMessageFor(model => model.ChassisBoardId, "", new { @class = "text-danger" })
                
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
