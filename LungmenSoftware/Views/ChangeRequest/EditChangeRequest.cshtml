@model LungmenSoftware.Models.ViewModel.ChangeRequestViewModelForDetail

@{
    ViewBag.Title = "修改/澄清軟體變更內容";
}

<h2>@ViewBag.Title</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <div class="row">
            <div class="col-md-10">
                <h4>請修改或確認相關資訊</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.ChangeRequest.ChangeRequestId)

                <div class="form-group">
                    @Html.LabelFor(model => model.ChangeRequest.SerialNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ChangeRequest.SerialNumber, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                        @Html.ValidationMessageFor(model => model.ChangeRequest.SerialNumber, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ChangeRequest.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ChangeRequest.Description, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ChangeRequest.Description, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ChangeRequest.DesignDoc, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ChangeRequest.DesignDoc, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ChangeRequest.DesignDoc, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ChangeRequest.Note, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.ChangeRequest.Note, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ChangeRequest.Note, "", new { @class = "text-danger" })
                    </div>
                </div>

            </div>
        </div>

        <div class="row">

            <div class="col-md-12">
                @if (Model.ChangeDeltas.Count > 0)
                {
                    for (int i = 0; i < Model.ChangeDeltas.Count; i++)
                    {
                        @Html.HiddenFor(model => model.ChangeDeltas[i].ChangeDeltaId)
                        <h4>軟體名稱: @Model.ChangeDeltas[i].RevInfos[0].SoftwareName</h4>
                        <div class="form-group">
                            @Html.LabelFor(model => model.ChangeDeltas[i].OriginalValue, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.ChangeDeltas[i].OriginalValue, new { htmlAttributes = new { @class = "form-control", @disabled = true } })
                                @Html.ValidationMessageFor(model => model.ChangeDeltas[i].OriginalValue, "", new { @class = "text-danger" })
                            </div>
                            @Html.LabelFor(model => model.ChangeDeltas[i].NewValue, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.ChangeDeltas[i].NewValue, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ChangeDeltas[i].NewValue, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    }

                }

                @if (Model.NumacChangeDeltas.Count > 0)
                {
                    <table class="table table-bordered table-condensed table-striped">
                        <caption>修改清單</caption>
                        <thead>
                            <tr>
                                <td>Panel</td>
                                <td>Subsystem</td>
                                <th>Module Name</th>
                                <th>Socket Location</th>
                                <th>Assembly</th>
                                <th>Serial Number</th>
                                <th>Program</th>
                                <th>Revision</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            @for (var i=0;i<Model.NumacChangeDeltas.Count;i++)
                            {
                                <tr>
                                    <td>@Model.NumacChangeDeltas[i].Panel</td>
                                    <td>@Model.NumacChangeDeltas[i].ChassisName</td>
                                    <td>@Model.NumacChangeDeltas[i].ModuleBoardName</td>
                                    <td>@Model.NumacChangeDeltas[i].SocketLocation</td>
                                    <td>
                                        <div>建置值: @Model.NumacChangeDeltas[i].OriAssembly</div>
                                        <div>
                                            @Html.Label("變更值") 
                                            @Html.EditorFor(model=>model.NumacChangeDeltas[i].Assembly, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.NumacChangeDeltas[i].Assembly, "", new { @class = "text-danger" })
                                        </div>
                                    </td>
                                    <td>
                                        <div>建置值: @Model.NumacChangeDeltas[i].OriSerialNumber</div>
                                        <div>
                                            @Html.Label("變更值")
                                            @Html.EditorFor(model => model.NumacChangeDeltas[i].SerialNumber, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.NumacChangeDeltas[i].SerialNumber, "", new { @class = "text-danger" })
                                        </div>
                                    </td>
                                    <td>
                                        <div>建置值: @Model.NumacChangeDeltas[i].OriProgram</div>
                                        <div>
                                            @Html.Label("變更值")
                                            @Html.EditorFor(model => model.NumacChangeDeltas[i].Program, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.NumacChangeDeltas[i].Program, "", new { @class = "text-danger" })
                                        </div>
                                    </td>
                                    <td>
                                        <div>建置值: @Model.NumacChangeDeltas[i].OriRev</div>
                                        <div>
                                            @Html.Label("變更值")
                                            @Html.EditorFor(model => model.NumacChangeDeltas[i].Rev, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.NumacChangeDeltas[i].Rev, "", new { @class = "text-danger" })
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                }

                <div class="form-group">
                    @Html.LabelFor(model => model.ChangeRequestMessage.Message, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.ChangeRequestMessage.Message, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                        @Html.ValidationMessageFor(model => model.ChangeRequestMessage.Message, "", new { @class = "text-danger" })
                    </div>
                </div>

                <br />
                <table class="table table-condensed table-striped table-hover">
                    <tr>
                        <th>內容</th>
                        <th>回應人員</th>
                        <th>日期</th>
                    </tr>
                    @foreach (var item in Model.ChangeRequestMessages)
                    {
                        <tr>
                            <td>@item.Message</td>
                            <td>@item.CreateBy</td>
                            <td>@item.CreateTime</td>
                        </tr>
                    }
                </table>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="送出" class="btn btn-primary" />
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("回到軟體修改清單", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
